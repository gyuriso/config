#[user]
#  email   = user@example.com
#  name    = Example User

[pull]
  rebase = merges

[merge]
  conflictstyle = diff3

[push]
  default = current

[core]
  eol = lf
	autocrlf = input
  editor  = /usr/bin/vim
	filemode = false

[credential]
  helper = store

[pager]
  branch = false

[diff]
	tool = meld

[difftool]
	prompt = false

[alias]

  a  = add
  c  = checkout
  co = checkout
  d  = diff
  s  = status

  # Get the current branch name (not so useful in itself, but used in# other aliases)
  branch-name = "!git rev-parse --abbrev-ref HEAD"

  # fetch from server and show changes compare to your local branch
  fdiff=!git fetch && git diff HEAD..@{u}
  flog=!git fetch && git log HEAD..@{u}

  # List commits in short form, with colors and branch/tag annotations
  ls = !git log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s%C(yellow) [%cn]' \
       --decorate

  # List commits showing changed files is invoked with git ll and looks like this
  ll = !git log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s%C(yellow) [%cn]' \
       --decorate \
       --numstat

  # Another list
  l = !git log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s%C(yellow) [%cn] %C(blue)%cr' \
      --graph \
      --decorate \
      --all

  # You can see all the commits related to a file, with the diff of the changes
  # Use it from the root folder of your repo.
  filetrace = !git log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s [%cn]' \
              --graph \
              --decorate \
              --all \
              --follow \
              -p --

  # Finding files and content inside the repo (grep)
  f = "!git ls-files | grep -i"

  # Search/grep your entire codebase for a string
  grep = grep -Ii

  # Find the commits that were introduced by a merge
  merge-log = "!git log `git merge-span .. $1`"

  # Show the changes that were introduced by a merge
  merge-diff = "!git diff `git merge-span ... $1`"

[color]
  interactive = auto
  status      = false
  branch      = auto
  pager       = true
  diff        = auto
  ui          = true

[color "diff"]
  meta        = blue bold
  frag        = magenta bold
  old         = white bold red
  new         = white bold green

[color "branch"]
  remote      = yellow

[include]
  path = ~/.gitconfig_personal
