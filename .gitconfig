#[user]
#  email   = user@example.com
#  name    = Example User

[pull]
	rebase = merges

[merge]
	conflictstyle = diff3
	tool = vimdiff

[push]
	default = current

[core]
	eol = lf
	autocrlf = input
	editor  = /usr/bin/vim
	filemode = false

[credential]
	helper = store

[pager]
	branch = false
	log = less -X
	show = less -X
	diff = less -X

[diff]
	tool = meld

[difftool]
	prompt = false

[alias]
	a  = add
	c  = checkout
	co = checkout
	d  = diff
	s  = status
	b  = branch

  # reset/diff/rebase against the upstream remote
	ushow = show HEAD..@{u}
	ulog = log HEAD..@{u}
	udiff = diff @{u}
	ureset = reset @{u}
	urebase = rebase @{u}

	# current branch name
	branch-name = branch --show-current

	# List commits in short form, with colors and branch/tag annotations
	ls = log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s%C(yellow) [%cn]' \
		--decorate

	# List commits showing changed files is invoked with git ll and looks like this
	ll = log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s%C(yellow) [%cn]' \
				--decorate --numstat

	# Another list
	l = log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s%C(yellow) [%cn] %C(blue)%cr' \
				--graph --decorate --all

	# You can see all the commits related to a file, with the diff of the changes
	# Use it from the root folder of your repo.
	ftrace = log --pretty=format:'%C(yellow)%h%C(green)%d %Creset%s [%cn]' --all --follow -p --

	# Finding files and content inside the repo (grep)
	f = "!git ls-files | grep -i"

	# Search/grep your entire codebase for a string
	grep = grep -Ii

	# Find the commits that were introduced by a merge
	merge-log = "!git log `git merge-span .. $1`"

	# Show the changes that were introduced by a merge
	merge-diff = "!git diff `git merge-span ... $1`"

[color]
	interactive = auto
	status      = false
	branch      = auto
	pager       = true
	diff        = auto
	ui          = true

[color "diff"]
	meta        = blue bold
	frag        = magenta bold
	old         = white bold red
	new         = white bold green

[color "branch"]
	remote      = yellow

[include]
	path = ~/.gitconfig_personal

[mergetool]
	prompt = false
